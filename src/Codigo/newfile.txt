

            for (int i = 0; i < entrada.getText().length(); i++) {
              Tokens token = lexer.yylex();
               String to=lexer.lexeme;
            if(token == Raiz){
               pOperandos.push( new Nodo(String.valueOf(token)));
                System.out.println(lexer.lexeme);
                        
            }
            if (entrada.getText().charAt(i) == ')') {
                while (!pOperadores.empty() && !pOperadores.peek().equals("(")) {
		    guardarSubArbol();
		}
		pOperadores.pop();
               
            } else {
                if (!entrada.getText().equals("(")  && !pOperadores.empty()) {
                     String op = (String) pOperadores.peek();
                      while(!op.equals("(") && !pOperadores.empty()
			   && Raiz.toString().indexOf(op) >= Raiz.toString().indexOf(lexer.lexeme.toString())){
                          guardarSubArbol();
                          if (!pOperadores.isEmpty()){
                              
                          }
                      }
                }
                pOperadores.push(lexer.lexeme.toString());
            }
        //Sacar todo lo que queda
	raiz = (Nodo)pOperandos.peek();
	while (!pOperadores.empty()) {
	    if (pOperadores.peek().equals("(")) {
		pOperadores.pop();
	    } else {
	    guardarSubArbol();
	    raiz = (Nodo) pOperandos.peek() ;
	    }
	}
                
               /* if (entrada.getText().charAt(i) == '(') {
                    System.out.println("Encontre un parentesis en la posicion >" + i);
                }
                if (token == Identificador){  
                }
                if(token == Raiz){

                   nodoActual.push(lexer.lexeme.charAt(i));
                    System.out.println(nodoActual);
                }*/
            }

            /* while (true) {
                Tokens token = lexer.yylex();
                if (token == null) {
                    resultado += "";
                    txtArea.setText(resultado);
                    return;
                }
              
                switch (token) {
                   
                case ERROR:
                        resultado += "Simbolo no definido\n";
                        break;
                        
                
                case Identificador: case Numero: case Reservada:
                        resultado += lexer.lexeme + ": Es  "+token+ "\n";
                        break;
                     default:
                        
                         resultado += "Token: "+token +"\n";
                        break; 
                }

            }*/




/*if (lexer.lexeme.contains("*")) {
                        System.out.println(token + " principal > " + lexer.lexeme);
                        resultado += token+""+lexer.lexeme;
                       
                            System.out.println("Hijo izq > "+entrada.getText().charAt(-1));
                            if (entrada.getText().compareTo("/") == 0) {
                                System.out.println("Raiz de > *");
                            }
                            if (entrada.getText().compareTo("+") == 0) {
                                System.out.println("Raiz de > *");
                            }
                            if (entrada.getText().compareTo("-") == 0) {
                                System.out.println("Raiz de > *");
                            }
                        
                    }
                    if (lexer.lexeme.equals("/")) {

                        if (!lexer.lexeme.contains("*")) {
                            System.out.println(token + " principal " + lexer.lexeme);
                        }
                    }*/


                    /*if (temp == 0) {
                        if (i != 0) {
                            System.out.println("Hijo izq: " + entrada.getText().charAt(i - 1));
                            temp = 1;
                        }

                    }

                    if (temp == 1) {
                        System.out.println("Hijo der: " + entrada.getText().charAt(i + 1));
                    }*/


            for (int i = 0; i <= entrada.getText().length(); i++) {
                Tokens token = lexer.yylex();
                resultado += lexer.lexeme;
            }
            for (int i = 0; i < entrada.getText().length(); i++) {
             
                if (resultado.contains("*") || resultado.contains("/") || resultado.contains("+") ||resultado.contains("-")) {
                    
                    if (i > 0) {
                        if(temp == 0){
                            System.out.println("Raiz principal" + resultado.charAt(i));          
                            System.out.println("hijo izq > "+resultado.charAt(i-1));
                              temp =1;
                        }
                        if (temp ==1){
                           temp=0;
                           System.out.println("hijo der > "+resultado.charAt(i+1));
                        }
                        
                    }else{
                        System.out.println(resultado.charAt(i));
                    }

                }